buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jcandksolutions.gradle:android-unit-test:2.0.+'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion Integer.parseInt(ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(ANDROID_BUILD_TARGET_SDK_VERSION)

        versionName VERSION_NAME
        versionCode Integer.parseInt(VERSION_CODE)

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        debug {
            versionNameSuffix '-dev'
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
        }

        release {
            versionNameSuffix '-release'
            minifyEnabled false
            debuggable false
        }
    }
    android {
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.squareup:otto:1.3.5'
    compile 'com.android.support:support-v4:21.+'
    compile 'com.android.support:appcompat-v7:21.0.0'
    compile 'com.jakewharton:butterknife:6.1.+'
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

apply plugin: 'checkstyle'
task checkstyle(type: Checkstyle) {

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    configFile file("${project.rootDir}/config/checkstyle.xml")

    def configProps = ['checkstyleConfigDir': project.rootDir.path + "/config"]
    configProperties configProps

    // empty classpath
    classpath = files()
}
preBuild.dependsOn('checkstyle')

apply from: 'https://raw.github.com/twotoasters/gradle-mvn-push/master/gradle-mvn-push.gradle'
